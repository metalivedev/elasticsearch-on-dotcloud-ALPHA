#!/usr/bin/env python
import json
import os
import sys
env = {}
env.update(os.environ)
env.update(json.load(open('/home/dotcloud/environment.json')))

# Make all DOTCLOUD_$SERVICENAME_FOO variables available as FOO as well
service_name = env['DOTCLOUD_SERVICE_NAME']
prefix = 'DOTCLOUD_{0}_'.format(service_name.upper())
extra_env = {}
for k in env:
    if k.startswith(prefix):
        extra_env[k[len(prefix):]] = env[k]
env.update(extra_env)

# Create _SELF convenience variables
service_id = env['DOTCLOUD_SERVICE_ID']
env['TCP_HOST_SELF'] = env['TCP_HOST_'+service_id]
env['TCP_PORT_SELF'] = env['TCP_PORT_'+service_id]

if sys.argv[1] == 'socat':
    os.execlp('socat', 'socat',
              'TCP-LISTEN:{0},fork,reuseaddr'.format(env['PORT_TCP']),
              'TCP:127.0.0.1:{0}'.format(env['TCP_PORT_SELF']))


if sys.argv[1] != 'elasticsearch':
    print 'Cannot start process', sys.argv[1]
    os.exit(1)


conf = open('/home/dotcloud/elasticsearch/config/elasticsearch.yml','w')

conf.write('''# Configuration generated by dotCloud script
http.port: {PORT_WWW}-{PORT_WWW}
path.plugins: {HOME}/elasticsearch/plugins
path.data: {HOME}/data
path.logs: /var/log/supervisor
transport.tcp.port: {TCP_PORT_SELF}-{TCP_PORT_SELF}
network.publish_host: {TCP_HOST_SELF}
'''.format(**env))

if 'ELASTICSEARCH_LOGIN' in env and 'ELASTICSEARCH_PASSWORD' in env:
    conf.write('http.basic.enabled: true\n')
    conf.write('http.basic.user: {ELASTICSEARCH_LOGIN}\n'.format(**env))
    conf.write('http.basic.password: {ELASTICSEARCH_PASSWORD}\n'.format(**env))

if env['INSTANCES'] != 1:
    tcp_keys = sorted(k for k in env if k.startswith('TCP_URL_'))
    tcp_urls = [env[k][len('tcp://'):] for k in tcp_keys]
    conf.write('''
discovery.zen.ping.unicast.hosts: {0}
discovery.zen.ping.multicast.enabled: false
discovery.zen.minimum_master_nodes: 2
'''.format(','.join(tcp_urls)))

conf.close()

if 'ELASTICSEARCH_HEAPSIZE' not in os.environ:
    os.environ['ELASTICSEARCH_HEAPSIZE'] = '256m'
os.environ['ES_HEAP_SIZE'] = os.environ['ELASTICSEARCH_HEAPSIZE']

os.execlpe('elasticsearch/bin/elasticsearch', 'elasticsearch', '-f', os.environ)
